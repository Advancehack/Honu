<?xml version="1.0" encoding="UTF-8"?>
<project name="Honu" basedir="." default="help">

  <property file="build.properties" />
  <property file="default.properties" />


  <property name="name" value="honu"/>
  <property name="version" value="0.3.0"/>
  <property name="release.jar.version" value="${version}"/>
  <property name="final.name" value="${name}-${version}" />
  <property name="build.dir" value="${basedir}/build"/>
  <property name="dist.dir" value="${basedir}/dist"/>
  <property name="javac.debug" value="true"/>
  <property name="javac.source" value="1.5"/>
  <property name="javac.target" value="1.5"/>
  <property name="lib.dir" value="lib"/>
  <property name="idl.dir" value="idl"/>


    <!-- High level list of commands available -->
    <target name="help">
        <echo message="Invoking 'ant -p' to show project help:" />
        <echo />
        <exec dir="${basedir}" executable="ant" searchpath="true" failifexecutionfails="false" >
            <arg value="-p"/>
        </exec>
    </target>
	
  <target name="honu_init" description="honu init" >
   
  </target>

  <target name="honu_compile" depends="honu_init" description="honu compile">

      <mkdir dir="${build.dir}/classes"/>
      <javac debug="${javac.debug}" destdir="${build.dir}/classes"
              source="${javac.source}" target="${javac.target}">
          <src path="src"/>
          <src path="example/"/>
          <src path="${idl.dir}/gen-javabean/"/>
          
          <classpath refid="classpath" /> 
     </javac>
  </target>

  <target name="honu_jar" depends="honu_compile" description="jar files creation">
      <mkdir dir="${dist.dir}"/>
         <buildnumber file="build.num"/>
         <tstamp>
           <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
         </tstamp>
         <manifest file="${build.dir}/MANIFEST.MF">
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Implementation-Version"
             value="${version}-b${build.number}"/>    
            <attribute name="Built-Date" value="${TODAY}"/>
         </manifest>


      <jar destfile="${build.dir}/honu-streaming.jar" 
           basedir="${build.dir}/classes" 
           manifest="${build.dir}/MANIFEST.MF">

         <fileset dir="${basedir}/src/">
           <include name="**/*.java" />
         </fileset>
      </jar>

      <jar destfile="${build.dir}/honu-client-streaming.jar" 
           basedir="${build.dir}/classes/" 
           includes="org/honu/inputtools/**/*.class"
           manifest="${build.dir}/MANIFEST.MF">
         <fileset dir="${basedir}/src/">
           <include name="org/apache/hadoop/honu/inputtools/**/*.java" />
         </fileset>

         <fileset dir="${build.dir}/classes/">
           <include name="org/honu/util/*.class" />
           <include name="org/honu/thrift/**/*.class" />
         </fileset>
         <fileset dir="${basedir}/src/">
           <include name="org/honu/util/*.java" />
         </fileset>
      </jar>

      <jar destfile="${build.dir}/honu-example.jar" 
           basedir="${build.dir}/classes/" 
           includes="org/honu/example/**/*.class"
           manifest="${build.dir}/MANIFEST.MF">
         <fileset dir="${basedir}/src/">
           <include name="org/honu/example/**/*.java" />
         </fileset>
      </jar>

  </target>

  <target name="honu_compile-test" depends="honu_compile"  description="compile test">
      <mkdir dir="${build.dir}/test/classes"/>
      <javac debug="${javac.debug}" destdir="${build.dir}/test/classes"
              source="${javac.source}" target="${javac.target}">
       <src path="test"/>
       <classpath refid="classpath" />
     </javac>
  </target>

  <target name="honu_jar-test" depends="honu_compile-test" description="test jar file">
      <mkdir dir="${build.dir}"/>
      <jar destfile="${build.dir}/honu-streaming-test.jar" 
           basedir="${build.dir}/test/classes"
           manifest="${build.dir}/MANIFEST.MF">
         <fileset dir="${basedir}/test/">
           <include name="**/*.java" />
         </fileset>
      </jar>
  </target>

  <target name="honu_dist" depends="honu_tar" description="create a distribution">
    <copy todir="${dist.dir}/">
      <fileset dir="${build.dir}/">
        <include name="honu-streaming.jar" />
        <include name="honu-client-streaming.jar" />
        <include name="honu-streaming-test.jar" />
        <include name="honu-example.jar" />
        <include name="RPMS/" />
      </fileset>
  </copy>

  </target>


  <target name="honu_package" depends="honu_jar,honu_jar-test" description="honu package">
    <mkdir dir="${build.dir}/${final.name}"/> 


    <copy todir="${build.dir}/${final.name}/bin" includeEmptyDirs="false">
       <fileset dir="${basedir}/bin" />
    </copy>

    <mkdir dir="${build.dir}/${final.name}/dist" />
    <copy todir="${build.dir}/${final.name}/dist/">
      <fileset dir="${build.dir}/">
        <include name="honu-streaming.jar" />
        <include name="honu-streaming-test.jar" />
      </fileset>
    </copy>

    <copy todir="${build.dir}/${final.name}/conf" includeEmptyDirs="false">
       <fileset dir="${basedir}/conf" />
    </copy>

    <copy todir="${build.dir}/${final.name}/lib" includeEmptyDirs="false">
       <fileset dir="${basedir}/lib" />
    </copy>
    
    <chmod perm="ugo+x" type="file" parallel="false">
      <fileset dir="${build.dir}/${final.name}/bin">
        <include name="**" />
      </fileset>
    </chmod>

    <mkdir dir="${build.dir}/${final.name}-examples"/> 
    
    <mkdir dir="${build.dir}/${final.name}-examples/conf"/> 
    <copy todir="${build.dir}/${final.name}-examples/conf/">
      <fileset dir="${basedir}/conf/">
        <include name="honu-log4j-client.properties" />
      </fileset>
    </copy>
    
    <copy todir="${build.dir}/${final.name}-examples/dist/">
      <fileset dir="${build.dir}/">
        <include name="honu-client-streaming.jar" />
        <include name="honu-example.jar" />
      </fileset>
    </copy>

    <copy todir="${build.dir}/${final.name}-examples/bin" includeEmptyDirs="false">
       <fileset dir="${basedir}/bin/" />
    </copy>

    <copy todir="${build.dir}/${final.name}-examples/lib" includeEmptyDirs="false">
       <fileset dir="${basedir}/lib" />
    </copy>

    <chmod perm="ugo+x" type="file" parallel="false">
      <fileset dir="${build.dir}/${final.name}-examples/bin">
        <include name="**" />
      </fileset>
    </chmod>

    
  </target>



  <!-- ================================================================== -->
  <!-- Make release tarball                                               -->
  <!-- ================================================================== -->
  <target name="honu_tar" depends="honu_package" description="Make release tarball">
    <macro_tar param.destfile="${build.dir}/${final.name}.tar.gz">
      <param.listofitems>
       <tarfileset dir="${build.dir}" mode="664">
         <exclude name="${final.name}/bin/*" />
         <include name="${final.name}/**" />
       </tarfileset>
       <tarfileset dir="${build.dir}" mode="755">
         <include name="${final.name}/bin/*" />
       </tarfileset>
      </param.listofitems>
    </macro_tar>
    
    <copy todir="${dist.dir}/">
      <fileset dir="${build.dir}/">
        <include name="${final.name}.tar.gz" />
      </fileset>
    </copy>
    
  </target>


  <target name="clean" description="clean" >
     <delete dir="${build.dir}"/>
     <delete dir="${dist.dir}"/>
  </target>

  <path id="classpath">
    <pathelement location="${build.dir}/classes" />

    <fileset dir="${lib.dir}/">
      <include name="**/*.jar" />
      <exclude name="**/excluded/" />
    </fileset>
  </path>


  <!-- ====================================================== -->
  <!-- Macro definitions                                      -->
  <!-- ====================================================== -->
  <macrodef name="macro_tar" description="Worker Macro for tar">
    <attribute name="param.destfile" />
    <element name="param.listofitems" />
    <sequential>
      <tar compression="gzip" longfile="gnu" destfile="@{param.destfile}">
        <param.listofitems />
      </tar>
   </sequential>
 </macrodef>

</project>

